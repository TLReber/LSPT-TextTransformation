[{
	"type":"html",
	"data":"<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0044)https://grpc.github.io/grpc/python/grpc.html -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    
    <title>gRPC — gRPC Python 1.24.3 documentation</title>
    <link rel="stylesheet" href="./grpc_files/alabaster.css" type="text/css">
    <link rel="stylesheet" href="./grpc_files/pygments.css" type="text/css">
    <script type="text/javascript" async="" src="./grpc_files/ga.js"></script><script type="text/javascript" id="documentation_options" data-url_root="./" src="./grpc_files/documentation_options.js"></script>
    <script type="text/javascript" src="./grpc_files/jquery.js"></script>
    <script type="text/javascript" src="./grpc_files/underscore.js"></script>
    <script type="text/javascript" src="./grpc_files/doctools.js"></script>
    <script type="text/javascript" src="./grpc_files/language_data.js"></script>
    <link rel="index" title="Index" href="https://grpc.github.io/grpc/python/genindex.html">
    <link rel="search" title="Search" href="https://grpc.github.io/grpc/python/search.html">
    <link rel="next" title="gRPC Channelz" href="https://grpc.github.io/grpc/python/grpc_channelz.html">
    <link rel="prev" title="Welcome to gRPC Python’s documentation!" href="https://grpc.github.io/grpc/python/index.html">
   
  <link rel="stylesheet" href="./grpc_files/custom.css" type="text/css">
  
  
  <meta name="viewport" content="width=device-width, initial-scale=0.9, maximum-scale=0.9">

  </head><body>
  <div class="document">
    
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
<h1 class="logo"><a href="https://grpc.github.io/grpc/python/index.html">gRPC Python</a></h1>



<p class="blurb">1.24.3</p>






<h3>Navigation</h3>
<p class="caption"><span class="caption-text">Contents:</span></p>
<ul class="current">
<li class="toctree-l1 current"><a class="current reference internal" href="https://grpc.github.io/grpc/python/grpc.html#">gRPC</a><ul>
<li class="toctree-l2"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#tutorial">Tutorial</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#example">Example</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#module-contents">Module Contents</a><ul>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#version">Version</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#create-client">Create Client</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#create-client-credentials">Create Client Credentials</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#create-server">Create Server</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#create-server-credentials">Create Server Credentials</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#rpc-method-handlers">RPC Method Handlers</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#channel-ready-future">Channel Ready Future</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#channel-connectivity">Channel Connectivity</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc-status-code">gRPC Status Code</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#channel-object">Channel Object</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#server-object">Server Object</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#authentication-authorization-objects">Authentication &amp; Authorization Objects</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc-exceptions">gRPC Exceptions</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#shared-context">Shared Context</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#client-side-context">Client-Side Context</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#client-side-interceptor">Client-Side Interceptor</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#service-side-context">Service-Side Context</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#service-side-handler">Service-Side Handler</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#service-side-interceptor">Service-Side Interceptor</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#multi-callable-interfaces">Multi-Callable Interfaces</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#future-interfaces">Future Interfaces</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#compression">Compression</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc_channelz.html">gRPC Channelz</a></li>
<li class="toctree-l1"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc_health_checking.html">gRPC Health Checking</a></li>
<li class="toctree-l1"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc_reflection.html">gRPC Reflection</a></li>
<li class="toctree-l1"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc_status.html">gRPC Status</a></li>
<li class="toctree-l1"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc_testing.html">gRPC Testing</a></li>
<li class="toctree-l1"><a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html">Glossary</a></li>
</ul>

<div class="relations">
<h3>Related Topics</h3>
<ul>
  <li><a href="https://grpc.github.io/grpc/python/index.html">Documentation overview</a><ul>
      <li>Previous: <a href="https://grpc.github.io/grpc/python/index.html" title="previous chapter">Welcome to gRPC Python’s documentation!</a></li>
      <li>Next: <a href="https://grpc.github.io/grpc/python/grpc_channelz.html" title="next chapter">gRPC Channelz</a></li>
  </ul></li>
</ul>
</div>
<div id="searchbox" style="" role="search">
  <h3>Quick search</h3>
    <div class="searchformwrapper">
    <form class="search" action="https://grpc.github.io/grpc/python/search.html" method="get">
      <input type="text" name="q">
      <input type="submit" value="Go">
      <input type="hidden" name="check_keywords" value="yes">
      <input type="hidden" name="area" value="default">
    </form>
    </div>
</div>
<script type="text/javascript">$('#searchbox').show(0);</script>








        </div>
      </div>
      <div class="documentwrapper">
        <div class="bodywrapper">
          

          <div class="body" role="main">
            
  <div class="section" id="module-grpc">
<span id="grpc"></span><h1>gRPC<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#module-grpc" title="Permalink to this headline">¶</a></h1>
<div class="section" id="tutorial">
<h2>Tutorial<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#tutorial" title="Permalink to this headline">¶</a></h2>
<p>If you want to see gRPC in action first, visit the <a class="reference external" href="https://grpc.io/docs/quickstart/python.html">Python Quickstart</a>.
Or, if you would like dive in with more extensive usage of gRPC Python, check <a class="reference external" href="https://grpc.io/docs/tutorials/basic/python.html">gRPC Basics - Python</a> out.</p>
</div>
<div class="section" id="example">
<h2>Example<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#example" title="Permalink to this headline">¶</a></h2>
<p>Go to <a class="reference external" href="https://github.com/grpc/grpc/tree/master/examples/python">gRPC Python Examples</a></p>
</div>
<div class="section" id="module-contents">
<h2>Module Contents<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#module-contents" title="Permalink to this headline">¶</a></h2>
<div class="section" id="version">
<h3>Version<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#version" title="Permalink to this headline">¶</a></h3>
<p>The version string is available as <code class="code docutils literal notranslate"><span class="pre">grpc.__version__</span></code>.</p>
</div>
<div class="section" id="create-client">
<h3>Create Client<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#create-client" title="Permalink to this headline">¶</a></h3>
<dl class="function">
<dt id="grpc.insecure_channel">
<code class="descclassname">grpc.</code><code class="descname">insecure_channel</code><span class="sig-paren">(</span><em>target</em>, <em>options=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#insecure_channel"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.insecure_channel" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates an insecure Channel to a server.</p>
<p>The returned Channel is thread-safe.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>target</strong> – The server address</li>
<li><strong>options</strong> – An optional list of key-value pairs (channel args
in gRPC Core runtime) to configure the channel.</li>
<li><strong>compression</strong> – An optional value indicating the compression method to be
used over the lifetime of the channel. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A Channel.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.secure_channel">
<code class="descclassname">grpc.</code><code class="descname">secure_channel</code><span class="sig-paren">(</span><em>target</em>, <em>credentials</em>, <em>options=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#secure_channel"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.secure_channel" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a secure Channel to a server.</p>
<p>The returned Channel is thread-safe.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>target</strong> – The server address.</li>
<li><strong>credentials</strong> – A ChannelCredentials instance.</li>
<li><strong>options</strong> – An optional list of key-value pairs (channel args
in gRPC Core runtime) to configure the channel.</li>
<li><strong>compression</strong> – An optional value indicating the compression method to be
used over the lifetime of the channel. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A Channel.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.intercept_channel">
<code class="descclassname">grpc.</code><code class="descname">intercept_channel</code><span class="sig-paren">(</span><em>channel</em>, <em>*interceptors</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#intercept_channel"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.intercept_channel" title="Permalink to this definition">¶</a></dt>
<dd><p>Intercepts a channel through a set of interceptors.</p>
<p>This is an EXPERIMENTAL API.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>channel</strong> – A Channel.</li>
<li><strong>interceptors</strong> – Zero or more objects of type
UnaryUnaryClientInterceptor,
UnaryStreamClientInterceptor,
StreamUnaryClientInterceptor, or
StreamStreamClientInterceptor.
Interceptors are given control in the order they are listed.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">A Channel that intercepts each invocation via the provided interceptors.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><p class="first last"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code> – If interceptor does not derive from any of
UnaryUnaryClientInterceptor,
UnaryStreamClientInterceptor,
StreamUnaryClientInterceptor, or
StreamStreamClientInterceptor.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="create-client-credentials">
<h3>Create Client Credentials<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#create-client-credentials" title="Permalink to this headline">¶</a></h3>
<dl class="function">
<dt id="grpc.ssl_channel_credentials">
<code class="descclassname">grpc.</code><code class="descname">ssl_channel_credentials</code><span class="sig-paren">(</span><em>root_certificates=None</em>, <em>private_key=None</em>, <em>certificate_chain=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ssl_channel_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ssl_channel_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a ChannelCredentials for use with an SSL-enabled Channel.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>root_certificates</strong> – The PEM-encoded root certificates as a byte string,
or None to retrieve them from a default location chosen by gRPC
runtime.</li>
<li><strong>private_key</strong> – The PEM-encoded private key as a byte string, or None if no
private key should be used.</li>
<li><strong>certificate_chain</strong> – The PEM-encoded certificate chain as a byte string
to use or or None if no certificate chain should be used.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A ChannelCredentials for use with an SSL-enabled Channel.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.metadata_call_credentials">
<code class="descclassname">grpc.</code><code class="descname">metadata_call_credentials</code><span class="sig-paren">(</span><em>metadata_plugin</em>, <em>name=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#metadata_call_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.metadata_call_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Construct CallCredentials from an AuthMetadataPlugin.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>metadata_plugin</strong> – An AuthMetadataPlugin to use for authentication.</li>
<li><strong>name</strong> – An optional name for the plugin.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A CallCredentials.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.access_token_call_credentials">
<code class="descclassname">grpc.</code><code class="descname">access_token_call_credentials</code><span class="sig-paren">(</span><em>access_token</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#access_token_call_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.access_token_call_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Construct CallCredentials from an access token.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>access_token</strong> – A string to place directly in the http request
authorization header, for example
“authorization: Bearer &lt;access_token&gt;”.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">A CallCredentials.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.composite_call_credentials">
<code class="descclassname">grpc.</code><code class="descname">composite_call_credentials</code><span class="sig-paren">(</span><em>*call_credentials</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#composite_call_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.composite_call_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Compose multiple CallCredentials to make a new CallCredentials.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>*call_credentials</strong> – At least two CallCredentials objects.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">A CallCredentials object composed of the given CallCredentials objects.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.composite_channel_credentials">
<code class="descclassname">grpc.</code><code class="descname">composite_channel_credentials</code><span class="sig-paren">(</span><em>channel_credentials</em>, <em>*call_credentials</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#composite_channel_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.composite_channel_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Compose a ChannelCredentials and one or more CallCredentials objects.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>channel_credentials</strong> – A ChannelCredentials object.</li>
<li><strong>*call_credentials</strong> – One or more CallCredentials objects.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last"></p><dl class="docutils">
<dt>A ChannelCredentials composed of the given ChannelCredentials and</dt>
<dd><p class="first last">CallCredentials objects.</p>
</dd>
</dl>
<p></p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="create-server">
<h3>Create Server<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#create-server" title="Permalink to this headline">¶</a></h3>
<dl class="function">
<dt id="grpc.server">
<code class="descclassname">grpc.</code><code class="descname">server</code><span class="sig-paren">(</span><em>thread_pool</em>, <em>handlers=None</em>, <em>interceptors=None</em>, <em>options=None</em>, <em>maximum_concurrent_rpcs=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#server"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.server" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a Server with which RPCs can be serviced.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>thread_pool</strong> – A futures.ThreadPoolExecutor to be used by the Server
to execute RPC handlers.</li>
<li><strong>handlers</strong> – An optional list of GenericRpcHandlers used for executing RPCs.
More handlers may be added by calling add_generic_rpc_handlers any time
before the server is started.</li>
<li><strong>interceptors</strong> – An optional list of ServerInterceptor objects that observe
and optionally manipulate the incoming RPCs before handing them over to
handlers. The interceptors are given control in the order they are
specified. This is an EXPERIMENTAL API.</li>
<li><strong>options</strong> – An optional list of key-value pairs (channel args in gRPC runtime)
to configure the channel.</li>
<li><strong>maximum_concurrent_rpcs</strong> – The maximum number of concurrent RPCs this server
will service before returning RESOURCE_EXHAUSTED status, or None to
indicate no limit.</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This compression algorithm will be used for the
lifetime of the server unless overridden. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A Server object.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="create-server-credentials">
<h3>Create Server Credentials<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#create-server-credentials" title="Permalink to this headline">¶</a></h3>
<dl class="function">
<dt id="grpc.ssl_server_credentials">
<code class="descclassname">grpc.</code><code class="descname">ssl_server_credentials</code><span class="sig-paren">(</span><em>private_key_certificate_chain_pairs</em>, <em>root_certificates=None</em>, <em>require_client_auth=False</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ssl_server_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ssl_server_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a ServerCredentials for use with an SSL-enabled Server.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>private_key_certificate_chain_pairs</strong> – A list of pairs of the form
[PEM-encoded private key, PEM-encoded certificate chain].</li>
<li><strong>root_certificates</strong> – An optional byte string of PEM-encoded client root
certificates that the server will use to verify client authentication.
If omitted, require_client_auth must also be False.</li>
<li><strong>require_client_auth</strong> – A boolean indicating whether or not to require
clients to be authenticated. May only be True if root_certificates
is not None.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A ServerCredentials for use with an SSL-enabled Server. Typically, this
object is an argument to add_secure_port() method during server setup.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.ssl_server_certificate_configuration">
<code class="descclassname">grpc.</code><code class="descname">ssl_server_certificate_configuration</code><span class="sig-paren">(</span><em>private_key_certificate_chain_pairs</em>, <em>root_certificates=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ssl_server_certificate_configuration"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ssl_server_certificate_configuration" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a ServerCertificateConfiguration for use with a Server.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>private_key_certificate_chain_pairs</strong> – A collection of pairs of
the form [PEM-encoded private key, PEM-encoded certificate
chain].</li>
<li><strong>root_certificates</strong> – An optional byte string of PEM-encoded client root
certificates that the server will use to verify client authentication.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last"></p><dl class="docutils">
<dt>A ServerCertificateConfiguration that can be returned in the certificate</dt>
<dd><p class="first last">configuration fetching callback.</p>
</dd>
</dl>
<p></p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.dynamic_ssl_server_credentials">
<code class="descclassname">grpc.</code><code class="descname">dynamic_ssl_server_credentials</code><span class="sig-paren">(</span><em>initial_certificate_configuration</em>, <em>certificate_configuration_fetcher</em>, <em>require_client_authentication=False</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#dynamic_ssl_server_credentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.dynamic_ssl_server_credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a ServerCredentials for use with an SSL-enabled Server.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>initial_certificate_configuration</strong> (<a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServerCertificateConfiguration" title="grpc.ServerCertificateConfiguration"><em>ServerCertificateConfiguration</em></a>) – The
certificate configuration with which the server will be initialized.</li>
<li><strong>certificate_configuration_fetcher</strong> (<em>callable</em>) – A callable that takes no
arguments and should return a ServerCertificateConfiguration to
replace the server’s current certificate, or None for no change
(i.e., the server will continue its current certificate
config). The library will call this callback on <em>every</em> new
client connection before starting the TLS handshake with the
client, thus allowing the user application to optionally
return a new ServerCertificateConfiguration that the server will then
use for the handshake.</li>
<li><strong>require_client_authentication</strong> – A boolean indicating whether or not to
require clients to be authenticated.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A ServerCredentials.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="rpc-method-handlers">
<h3>RPC Method Handlers<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#rpc-method-handlers" title="Permalink to this headline">¶</a></h3>
<dl class="function">
<dt id="grpc.unary_unary_rpc_method_handler">
<code class="descclassname">grpc.</code><code class="descname">unary_unary_rpc_method_handler</code><span class="sig-paren">(</span><em>behavior</em>, <em>request_deserializer=None</em>, <em>response_serializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#unary_unary_rpc_method_handler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.unary_unary_rpc_method_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates an RpcMethodHandler for a unary-unary RPC method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>behavior</strong> – The implementation of an RPC that accepts one request
and returns one response.</li>
<li><strong>request_deserializer</strong> – An optional behavior for request deserialization.</li>
<li><strong>response_serializer</strong> – An optional behavior for response serialization.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An RpcMethodHandler object that is typically used by grpc.Server.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.unary_stream_rpc_method_handler">
<code class="descclassname">grpc.</code><code class="descname">unary_stream_rpc_method_handler</code><span class="sig-paren">(</span><em>behavior</em>, <em>request_deserializer=None</em>, <em>response_serializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#unary_stream_rpc_method_handler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.unary_stream_rpc_method_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates an RpcMethodHandler for a unary-stream RPC method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>behavior</strong> – The implementation of an RPC that accepts one request
and returns an iterator of response values.</li>
<li><strong>request_deserializer</strong> – An optional behavior for request deserialization.</li>
<li><strong>response_serializer</strong> – An optional behavior for response serialization.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An RpcMethodHandler object that is typically used by grpc.Server.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.stream_unary_rpc_method_handler">
<code class="descclassname">grpc.</code><code class="descname">stream_unary_rpc_method_handler</code><span class="sig-paren">(</span><em>behavior</em>, <em>request_deserializer=None</em>, <em>response_serializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#stream_unary_rpc_method_handler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.stream_unary_rpc_method_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates an RpcMethodHandler for a stream-unary RPC method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>behavior</strong> – The implementation of an RPC that accepts an iterator of
request values and returns a single response value.</li>
<li><strong>request_deserializer</strong> – An optional behavior for request deserialization.</li>
<li><strong>response_serializer</strong> – An optional behavior for response serialization.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An RpcMethodHandler object that is typically used by grpc.Server.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.stream_stream_rpc_method_handler">
<code class="descclassname">grpc.</code><code class="descname">stream_stream_rpc_method_handler</code><span class="sig-paren">(</span><em>behavior</em>, <em>request_deserializer=None</em>, <em>response_serializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#stream_stream_rpc_method_handler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.stream_stream_rpc_method_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates an RpcMethodHandler for a stream-stream RPC method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>behavior</strong> – The implementation of an RPC that accepts an iterator of
request values and returns an iterator of response values.</li>
<li><strong>request_deserializer</strong> – An optional behavior for request deserialization.</li>
<li><strong>response_serializer</strong> – An optional behavior for response serialization.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An RpcMethodHandler object that is typically used by grpc.Server.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="function">
<dt id="grpc.method_handlers_generic_handler">
<code class="descclassname">grpc.</code><code class="descname">method_handlers_generic_handler</code><span class="sig-paren">(</span><em>service</em>, <em>method_handlers</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#method_handlers_generic_handler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.method_handlers_generic_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a GenericRpcHandler from RpcMethodHandlers.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>service</strong> – The name of the service that is implemented by the
method_handlers.</li>
<li><strong>method_handlers</strong> – A dictionary that maps method names to corresponding
RpcMethodHandler.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A GenericRpcHandler. This is typically added to the grpc.Server object
with add_generic_rpc_handlers() before starting the server.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="channel-ready-future">
<h3>Channel Ready Future<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#channel-ready-future" title="Permalink to this headline">¶</a></h3>
<dl class="function">
<dt id="grpc.channel_ready_future">
<code class="descclassname">grpc.</code><code class="descname">channel_ready_future</code><span class="sig-paren">(</span><em>channel</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#channel_ready_future"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.channel_ready_future" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a Future that tracks when a Channel is ready.</p>
<p>Cancelling the Future does not affect the channel’s state machine.
It merely decouples the Future from channel state machine.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>channel</strong> – A Channel object.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">A Future object that matures when the channel connectivity is
ChannelConnectivity.READY.</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="channel-connectivity">
<h3>Channel Connectivity<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#channel-connectivity" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.ChannelConnectivity">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ChannelConnectivity</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ChannelConnectivity"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelConnectivity" title="Permalink to this definition">¶</a></dt>
<dd><p>Mirrors grpc_connectivity_state in the gRPC Core.</p>
<dl class="attribute">
<dt id="grpc.ChannelConnectivity.IDLE">
<code class="descname">IDLE</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelConnectivity.IDLE" title="Permalink to this definition">¶</a></dt>
<dd><p>The channel is idle.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ChannelConnectivity.CONNECTING">
<code class="descname">CONNECTING</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelConnectivity.CONNECTING" title="Permalink to this definition">¶</a></dt>
<dd><p>The channel is connecting.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ChannelConnectivity.READY">
<code class="descname">READY</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelConnectivity.READY" title="Permalink to this definition">¶</a></dt>
<dd><p>The channel is ready to conduct RPCs.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ChannelConnectivity.TRANSIENT_FAILURE">
<code class="descname">TRANSIENT_FAILURE</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelConnectivity.TRANSIENT_FAILURE" title="Permalink to this definition">¶</a></dt>
<dd><p>The channel has seen a failure from which it expects
to recover.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ChannelConnectivity.SHUTDOWN">
<code class="descname">SHUTDOWN</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelConnectivity.SHUTDOWN" title="Permalink to this definition">¶</a></dt>
<dd><p>The channel has seen a failure from which it cannot recover.</p>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="grpc-status-code">
<h3>gRPC Status Code<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc-status-code" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.StatusCode">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">StatusCode</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StatusCode"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode" title="Permalink to this definition">¶</a></dt>
<dd><p>Mirrors grpc_status_code in the gRPC Core.</p>
<dl class="attribute">
<dt id="grpc.StatusCode.OK">
<code class="descname">OK</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.OK" title="Permalink to this definition">¶</a></dt>
<dd><p>Not an error; returned on success</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.CANCELLED">
<code class="descname">CANCELLED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.CANCELLED" title="Permalink to this definition">¶</a></dt>
<dd><p>The operation was cancelled (typically by the caller).</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.UNKNOWN">
<code class="descname">UNKNOWN</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.UNKNOWN" title="Permalink to this definition">¶</a></dt>
<dd><p>Unknown error.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.INVALID_ARGUMENT">
<code class="descname">INVALID_ARGUMENT</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.INVALID_ARGUMENT" title="Permalink to this definition">¶</a></dt>
<dd><p>Client specified an invalid argument.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.DEADLINE_EXCEEDED">
<code class="descname">DEADLINE_EXCEEDED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.DEADLINE_EXCEEDED" title="Permalink to this definition">¶</a></dt>
<dd><p>Deadline expired before operation could complete.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.NOT_FOUND">
<code class="descname">NOT_FOUND</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.NOT_FOUND" title="Permalink to this definition">¶</a></dt>
<dd><p>Some requested entity (e.g., file or directory) was not found.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.ALREADY_EXISTS">
<code class="descname">ALREADY_EXISTS</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.ALREADY_EXISTS" title="Permalink to this definition">¶</a></dt>
<dd><p>Some entity that we attempted to create (e.g., file or directory)
already exists.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.PERMISSION_DENIED">
<code class="descname">PERMISSION_DENIED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.PERMISSION_DENIED" title="Permalink to this definition">¶</a></dt>
<dd><p>The caller does not have permission to execute the specified
operation.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.UNAUTHENTICATED">
<code class="descname">UNAUTHENTICATED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.UNAUTHENTICATED" title="Permalink to this definition">¶</a></dt>
<dd><p>The request does not have valid authentication credentials for the
operation.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.RESOURCE_EXHAUSTED">
<code class="descname">RESOURCE_EXHAUSTED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.RESOURCE_EXHAUSTED" title="Permalink to this definition">¶</a></dt>
<dd><p>Some resource has been exhausted, perhaps a per-user quota, or
perhaps the entire file system is out of space.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.FAILED_PRECONDITION">
<code class="descname">FAILED_PRECONDITION</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.FAILED_PRECONDITION" title="Permalink to this definition">¶</a></dt>
<dd><p>Operation was rejected because the system is not in a state
required for the operation’s execution.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.ABORTED">
<code class="descname">ABORTED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.ABORTED" title="Permalink to this definition">¶</a></dt>
<dd><p>The operation was aborted, typically due to a concurrency issue
like sequencer check failures, transaction aborts, etc.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.UNIMPLEMENTED">
<code class="descname">UNIMPLEMENTED</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.UNIMPLEMENTED" title="Permalink to this definition">¶</a></dt>
<dd><p>Operation is not implemented or not supported/enabled in this service.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.INTERNAL">
<code class="descname">INTERNAL</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.INTERNAL" title="Permalink to this definition">¶</a></dt>
<dd><p>Internal errors.  Means some invariants expected by underlying
system has been broken.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.UNAVAILABLE">
<code class="descname">UNAVAILABLE</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.UNAVAILABLE" title="Permalink to this definition">¶</a></dt>
<dd><p>The service is currently unavailable.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.StatusCode.DATA_LOSS">
<code class="descname">DATA_LOSS</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StatusCode.DATA_LOSS" title="Permalink to this definition">¶</a></dt>
<dd><p>Unrecoverable data loss or corruption.</p>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="channel-object">
<h3>Channel Object<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#channel-object" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.Channel">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">Channel</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords RPC invocation via generic methods on client-side.</p>
<p>Channel objects implement the Context Manager type, although they need not
support being entered and exited multiple times.</p>
<dl class="method">
<dt id="grpc.Channel.close">
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.close"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.close" title="Permalink to this definition">¶</a></dt>
<dd><p>Closes this Channel and releases all resources held by it.</p>
<p>Closing the Channel will immediately terminate all RPCs active with the
Channel and it is not valid to invoke new RPCs with the Channel.</p>
<p>This method is idempotent.</p>
</dd></dl>

<dl class="method">
<dt id="grpc.Channel.stream_stream">
<code class="descname">stream_stream</code><span class="sig-paren">(</span><em>method</em>, <em>request_serializer=None</em>, <em>response_deserializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.stream_stream"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.stream_stream" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a StreamStreamMultiCallable for a stream-stream method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>method</strong> – The name of the RPC method.</li>
<li><strong>request_serializer</strong> – Optional behaviour for serializing the request
message. Request goes unserialized in case None is passed.</li>
<li><strong>response_deserializer</strong> – Optional behaviour for deserializing the
response message. Response goes undeserialized in case None
is passed.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A StreamStreamMultiCallable value for the named stream-stream method.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Channel.stream_unary">
<code class="descname">stream_unary</code><span class="sig-paren">(</span><em>method</em>, <em>request_serializer=None</em>, <em>response_deserializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.stream_unary"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.stream_unary" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a StreamUnaryMultiCallable for a stream-unary method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>method</strong> – The name of the RPC method.</li>
<li><strong>request_serializer</strong> – Optional behaviour for serializing the request
message. Request goes unserialized in case None is passed.</li>
<li><strong>response_deserializer</strong> – Optional behaviour for deserializing the
response message. Response goes undeserialized in case None is
passed.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A StreamUnaryMultiCallable value for the named stream-unary method.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Channel.subscribe">
<code class="descname">subscribe</code><span class="sig-paren">(</span><em>callback</em>, <em>try_to_connect=False</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.subscribe"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.subscribe" title="Permalink to this definition">¶</a></dt>
<dd><p>Subscribe to this Channel’s connectivity state machine.</p>
<p>A Channel may be in any of the states described by ChannelConnectivity.
This method allows application to monitor the state transitions.
The typical use case is to debug or gain better visibility into gRPC
runtime’s state.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>callback</strong> – A callable to be invoked with ChannelConnectivity argument.
ChannelConnectivity describes current state of the channel.
The callable will be invoked immediately upon subscription
and again for every change to ChannelConnectivity until it
is unsubscribed or this Channel object goes out of scope.</li>
<li><strong>try_to_connect</strong> – A boolean indicating whether or not this Channel
should attempt to connect immediately. If set to False, gRPC
runtime decides when to connect.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Channel.unary_stream">
<code class="descname">unary_stream</code><span class="sig-paren">(</span><em>method</em>, <em>request_serializer=None</em>, <em>response_deserializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.unary_stream"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.unary_stream" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a UnaryStreamMultiCallable for a unary-stream method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>method</strong> – The name of the RPC method.</li>
<li><strong>request_serializer</strong> – Optional behaviour for serializing the request
message. Request goes unserialized in case None is passed.</li>
<li><strong>response_deserializer</strong> – Optional behaviour for deserializing the
response message. Response goes undeserialized in case None is
passed.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A UnaryStreamMultiCallable value for the name unary-stream method.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Channel.unary_unary">
<code class="descname">unary_unary</code><span class="sig-paren">(</span><em>method</em>, <em>request_serializer=None</em>, <em>response_deserializer=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.unary_unary"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.unary_unary" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a UnaryUnaryMultiCallable for a unary-unary method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>method</strong> – The name of the RPC method.</li>
<li><strong>request_serializer</strong> – Optional behaviour for serializing the request
message. Request goes unserialized in case None is passed.</li>
<li><strong>response_deserializer</strong> – Optional behaviour for deserializing the
response message. Response goes undeserialized in case None
is passed.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">A UnaryUnaryMultiCallable value for the named unary-unary method.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Channel.unsubscribe">
<code class="descname">unsubscribe</code><span class="sig-paren">(</span><em>callback</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Channel.unsubscribe"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Channel.unsubscribe" title="Permalink to this definition">¶</a></dt>
<dd><p>Unsubscribes a subscribed callback from this Channel’s connectivity.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>callback</strong> – A callable previously registered with this Channel from</li>
<li><strong>been passed to its "subscribe" method.</strong> (<em>having</em>) – </li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="server-object">
<h3>Server Object<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#server-object" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.Server">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">Server</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server" title="Permalink to this definition">¶</a></dt>
<dd><p>Services RPCs.</p>
<dl class="method">
<dt id="grpc.Server.add_generic_rpc_handlers">
<code class="descname">add_generic_rpc_handlers</code><span class="sig-paren">(</span><em>generic_rpc_handlers</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server.add_generic_rpc_handlers"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server.add_generic_rpc_handlers" title="Permalink to this definition">¶</a></dt>
<dd><p>Registers GenericRpcHandlers with this Server.</p>
<p>This method is only safe to call before the server is started.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>generic_rpc_handlers</strong> – An iterable of GenericRpcHandlers that will be</li>
<li><strong>to service RPCs.</strong> (<em>used</em>) – </li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Server.add_insecure_port">
<code class="descname">add_insecure_port</code><span class="sig-paren">(</span><em>address</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server.add_insecure_port"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server.add_insecure_port" title="Permalink to this definition">¶</a></dt>
<dd><p>Opens an insecure port for accepting RPCs.</p>
<p>This method may only be called before starting the server.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>address</strong> – The address for which to open a port. If the port is 0,
or not specified in the address, then gRPC runtime will choose a port.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">An integer port on which server will accept RPC requests.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Server.add_secure_port">
<code class="descname">add_secure_port</code><span class="sig-paren">(</span><em>address</em>, <em>server_credentials</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server.add_secure_port"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server.add_secure_port" title="Permalink to this definition">¶</a></dt>
<dd><p>Opens a secure port for accepting RPCs.</p>
<p>This method may only be called before starting the server.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>address</strong> – The address for which to open a port.
if the port is 0, or not specified in the address, then gRPC
runtime will choose a port.</li>
<li><strong>server_credentials</strong> – A ServerCredentials object.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An integer port on which server will accept RPC requests.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Server.start">
<code class="descname">start</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server.start"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server.start" title="Permalink to this definition">¶</a></dt>
<dd><p>Starts this Server.</p>
<p>This method may only be called once. (i.e. it is not idempotent).</p>
</dd></dl>

<dl class="method">
<dt id="grpc.Server.stop">
<code class="descname">stop</code><span class="sig-paren">(</span><em>grace</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server.stop"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server.stop" title="Permalink to this definition">¶</a></dt>
<dd><p>Stops this Server.</p>
<p>This method immediately stop service of new RPCs in all cases.</p>
<p>If a grace period is specified, this method returns immediately
and all RPCs active at the end of the grace period are aborted.
If a grace period is not specified (by passing None for <cite>grace</cite>),
all existing RPCs are aborted immediately and this method
blocks until the last RPC handler terminates.</p>
<p>This method is idempotent and may be called at any time.
Passing a smaller grace value in a subsequent call will have
the effect of stopping the Server sooner (passing None will
have the effect of stopping the server immediately). Passing
a larger grace value in a subsequent call <em>will not</em> have the
effect of stopping the server later (i.e. the most restrictive
grace value is used).</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>grace</strong> – A duration of time in seconds or None.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">A threading.Event that will be set when this Server has completely
stopped, i.e. when running RPCs either complete or are aborted and
all handlers have terminated.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Server.wait_for_termination">
<code class="descname">wait_for_termination</code><span class="sig-paren">(</span><em>timeout=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Server.wait_for_termination"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Server.wait_for_termination" title="Permalink to this definition">¶</a></dt>
<dd><p>Block current thread until the server stops.</p>
<p>This is an EXPERIMENTAL API.</p>
<p>The wait will not consume computational resources during blocking, and
it will block until one of the two following conditions are met:</p>
<ol class="arabic simple">
<li>The server is stopped or terminated;</li>
<li>A timeout occurs if timeout is not <cite>None</cite>.</li>
</ol>
<p>The timeout argument works in the same way as <cite>threading.Event.wait()</cite>.
<a class="reference external" href="https://docs.python.org/3/library/threading.html#threading.Event.wait">https://docs.python.org/3/library/threading.html#threading.Event.wait</a></p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>timeout</strong> – A floating point number specifying a timeout for the
operation in seconds.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">A bool indicates if the operation times out.</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="authentication-authorization-objects">
<h3>Authentication &amp; Authorization Objects<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#authentication-authorization-objects" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.ChannelCredentials">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ChannelCredentials</code><span class="sig-paren">(</span><em>credentials</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ChannelCredentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ChannelCredentials" title="Permalink to this definition">¶</a></dt>
<dd><p>An encapsulation of the data required to create a secure Channel.</p>
<p>This class has no supported interface - it exists to define the type of its
instances and its instances exist to be passed to other functions. For
example, ssl_channel_credentials returns an instance of this class and
secure_channel requires an instance of this class.</p>
</dd></dl>

<dl class="class">
<dt id="grpc.CallCredentials">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">CallCredentials</code><span class="sig-paren">(</span><em>credentials</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#CallCredentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.CallCredentials" title="Permalink to this definition">¶</a></dt>
<dd><p>An encapsulation of the data required to assert an identity over a call.</p>
<p>A CallCredentials has to be used with secure Channel, otherwise the
metadata will not be transmitted to the server.</p>
<p>A CallCredentials may be composed with ChannelCredentials to always assert
identity for every call over that Channel.</p>
<p>This class has no supported interface - it exists to define the type of its
instances and its instances exist to be passed to other functions.</p>
</dd></dl>

<dl class="class">
<dt id="grpc.AuthMetadataContext">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">AuthMetadataContext</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#AuthMetadataContext"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataContext" title="Permalink to this definition">¶</a></dt>
<dd><p>Provides information to call credentials metadata plugins.</p>
<dl class="attribute">
<dt id="grpc.AuthMetadataContext.service_url">
<code class="descname">service_url</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataContext.service_url" title="Permalink to this definition">¶</a></dt>
<dd><p>A string URL of the service being called into.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.AuthMetadataContext.method_name">
<code class="descname">method_name</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataContext.method_name" title="Permalink to this definition">¶</a></dt>
<dd><p>A string of the fully qualified method name being called.</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.AuthMetadataPluginCallback">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">AuthMetadataPluginCallback</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#AuthMetadataPluginCallback"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataPluginCallback" title="Permalink to this definition">¶</a></dt>
<dd><p>Callback object received by a metadata plugin.</p>
<dl class="method">
<dt id="grpc.AuthMetadataPluginCallback.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><em>metadata</em>, <em>error</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#AuthMetadataPluginCallback.__call__"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataPluginCallback.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>Passes to the gRPC runtime authentication metadata for an RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>metadata</strong> – The <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> used to construct the CallCredentials.</li>
<li><strong>error</strong> – An Exception to indicate error or None to indicate success.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.AuthMetadataPlugin">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">AuthMetadataPlugin</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#AuthMetadataPlugin"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataPlugin" title="Permalink to this definition">¶</a></dt>
<dd><p>A specification for custom authentication.</p>
<dl class="method">
<dt id="grpc.AuthMetadataPlugin.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><em>context</em>, <em>callback</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#AuthMetadataPlugin.__call__"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.AuthMetadataPlugin.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>Implements authentication by passing metadata to a callback.</p>
<p>Implementations of this method must not block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>context</strong> – An AuthMetadataContext providing information on the RPC that
the plugin is being called to authenticate.</li>
<li><strong>callback</strong> – An AuthMetadataPluginCallback to be invoked either
synchronously or asynchronously.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.ServerCredentials">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ServerCredentials</code><span class="sig-paren">(</span><em>credentials</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServerCredentials"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServerCredentials" title="Permalink to this definition">¶</a></dt>
<dd><p>An encapsulation of the data required to open a secure port on a Server.</p>
<p>This class has no supported interface - it exists to define the type of its
instances and its instances exist to be passed to other functions.</p>
</dd></dl>

<dl class="class">
<dt id="grpc.ServerCertificateConfiguration">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ServerCertificateConfiguration</code><span class="sig-paren">(</span><em>certificate_configuration</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServerCertificateConfiguration"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServerCertificateConfiguration" title="Permalink to this definition">¶</a></dt>
<dd><p>A certificate configuration for use with an SSL-enabled Server.</p>
<p>Instances of this class can be returned in the certificate configuration
fetching callback.</p>
<p>This class has no supported interface – it exists to define the
type of its instances and its instances exist to be passed to
other functions.</p>
</dd></dl>

</div>
<div class="section" id="grpc-exceptions">
<h3>gRPC Exceptions<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc-exceptions" title="Permalink to this headline">¶</a></h3>
<dl class="exception">
<dt id="grpc.RpcError">
<em class="property">exception </em><code class="descclassname">grpc.</code><code class="descname">RpcError</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcError"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcError" title="Permalink to this definition">¶</a></dt>
<dd><p>Raised by the gRPC library to indicate non-OK-status RPC termination.</p>
</dd></dl>

</div>
<div class="section" id="shared-context">
<h3>Shared Context<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#shared-context" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.RpcContext">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">RpcContext</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcContext"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcContext" title="Permalink to this definition">¶</a></dt>
<dd><p>Provides RPC-related information and action.</p>
<dl class="method">
<dt id="grpc.RpcContext.add_callback">
<code class="descname">add_callback</code><span class="sig-paren">(</span><em>callback</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcContext.add_callback"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcContext.add_callback" title="Permalink to this definition">¶</a></dt>
<dd><p>Registers a callback to be called on RPC termination.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>callback</strong> – A no-parameter callable to be called on RPC termination.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><dl class="docutils">
<dt>True if the callback was added and will be called later; False if</dt>
<dd>the callback was not added and will not be called (because the RPC
already terminated or some other reason).</dd>
</dl>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.RpcContext.cancel">
<code class="descname">cancel</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcContext.cancel"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcContext.cancel" title="Permalink to this definition">¶</a></dt>
<dd><p>Cancels the RPC.</p>
<p>Idempotent and has no effect if the RPC has already terminated.</p>
</dd></dl>

<dl class="method">
<dt id="grpc.RpcContext.is_active">
<code class="descname">is_active</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcContext.is_active"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcContext.is_active" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes whether the RPC is active or has terminated.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">True if RPC is active, False otherwise.</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.RpcContext.time_remaining">
<code class="descname">time_remaining</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcContext.time_remaining"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcContext.time_remaining" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes the length of allowed time remaining for the RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">A nonnegative float indicating the length of allowed time in seconds
remaining for the RPC to complete before it is considered to have
timed out, or None if no deadline was specified for the RPC.</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="client-side-context">
<h3>Client-Side Context<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#client-side-context" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.Call">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">Call</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Call"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Call" title="Permalink to this definition">¶</a></dt>
<dd><p>Invocation-side utility object for an RPC.</p>
<dl class="method">
<dt id="grpc.Call.code">
<code class="descname">code</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Call.code"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Call.code" title="Permalink to this definition">¶</a></dt>
<dd><p>Accesses the status code sent by the server.</p>
<p>This method blocks until the value is available.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The StatusCode value for the RPC.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Call.details">
<code class="descname">details</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Call.details"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Call.details" title="Permalink to this definition">¶</a></dt>
<dd><p>Accesses the details sent by the server.</p>
<p>This method blocks until the value is available.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The details string of the RPC.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Call.initial_metadata">
<code class="descname">initial_metadata</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Call.initial_metadata"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Call.initial_metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>Accesses the initial metadata sent by the server.</p>
<p>This method blocks until the value is available.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The initial <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a>.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Call.trailing_metadata">
<code class="descname">trailing_metadata</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Call.trailing_metadata"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Call.trailing_metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>Accesses the trailing metadata sent by the server.</p>
<p>This method blocks until the value is available.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The trailing <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a>.</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="client-side-interceptor">
<h3>Client-Side Interceptor<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#client-side-interceptor" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.ClientCallDetails">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ClientCallDetails</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ClientCallDetails"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes an RPC to be invoked.</p>
<p>This is an EXPERIMENTAL API.</p>
<dl class="attribute">
<dt id="grpc.ClientCallDetails.method">
<code class="descname">method</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails.method" title="Permalink to this definition">¶</a></dt>
<dd><p>The method name of the RPC.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ClientCallDetails.timeout">
<code class="descname">timeout</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails.timeout" title="Permalink to this definition">¶</a></dt>
<dd><p>An optional duration of time in seconds to allow for the RPC.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ClientCallDetails.metadata">
<code class="descname">metadata</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails.metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to
the service-side of the RPC.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ClientCallDetails.credentials">
<code class="descname">credentials</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails.credentials" title="Permalink to this definition">¶</a></dt>
<dd><p>An optional CallCredentials for the RPC.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ClientCallDetails.wait_for_ready">
<code class="descname">wait_for_ready</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails.wait_for_ready" title="Permalink to this definition">¶</a></dt>
<dd><p>This is an EXPERIMENTAL argument. An optional flag t
enable wait for ready mechanism.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.ClientCallDetails.compression">
<code class="descname">compression</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ClientCallDetails.compression" title="Permalink to this definition">¶</a></dt>
<dd><p>An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.UnaryUnaryClientInterceptor">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">UnaryUnaryClientInterceptor</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryUnaryClientInterceptor"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryUnaryClientInterceptor" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords intercepting unary-unary invocations.</p>
<p>This is an EXPERIMENTAL API.</p>
<dl class="method">
<dt id="grpc.UnaryUnaryClientInterceptor.intercept_unary_unary">
<code class="descname">intercept_unary_unary</code><span class="sig-paren">(</span><em>continuation</em>, <em>client_call_details</em>, <em>request</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryUnaryClientInterceptor.intercept_unary_unary"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryUnaryClientInterceptor.intercept_unary_unary" title="Permalink to this definition">¶</a></dt>
<dd><p>Intercepts a unary-unary invocation asynchronously.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>continuation</strong> – A function that proceeds with the invocation by
executing the next interceptor in chain or invoking the
actual RPC on the underlying Channel. It is the interceptor’s
responsibility to call it if it decides to move the RPC forward.
The interceptor can use
<cite>response_future = continuation(client_call_details, request)</cite>
to continue with the RPC. <cite>continuation</cite> returns an object that is
both a Call for the RPC and a Future. In the event of RPC
completion, the return Call-Future’s result value will be
the response message of the RPC. Should the event terminate
with non-OK status, the returned Call-Future’s exception value
will be an RpcError.</li>
<li><strong>client_call_details</strong> – A ClientCallDetails object describing the
outgoing RPC.</li>
<li><strong>request</strong> – The request value for the RPC.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and a Future.
In the event of RPC completion, the return Call-Future’s
result value will be the response message of the RPC.
Should the event terminate with non-OK status, the returned
Call-Future’s exception value will be an RpcError.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.UnaryStreamClientInterceptor">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">UnaryStreamClientInterceptor</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryStreamClientInterceptor"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryStreamClientInterceptor" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords intercepting unary-stream invocations.</p>
<p>This is an EXPERIMENTAL API.</p>
<dl class="method">
<dt id="grpc.UnaryStreamClientInterceptor.intercept_unary_stream">
<code class="descname">intercept_unary_stream</code><span class="sig-paren">(</span><em>continuation</em>, <em>client_call_details</em>, <em>request</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryStreamClientInterceptor.intercept_unary_stream"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryStreamClientInterceptor.intercept_unary_stream" title="Permalink to this definition">¶</a></dt>
<dd><p>Intercepts a unary-stream invocation.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>continuation</strong> – A function that proceeds with the invocation by
executing the next interceptor in chain or invoking the
actual RPC on the underlying Channel. It is the interceptor’s
responsibility to call it if it decides to move the RPC forward.
The interceptor can use
<cite>response_iterator = continuation(client_call_details, request)</cite>
to continue with the RPC. <cite>continuation</cite> returns an object that is
both a Call for the RPC and an iterator for response values.
Drawing response values from the returned Call-iterator may
raise RpcError indicating termination of the RPC with non-OK
status.</li>
<li><strong>client_call_details</strong> – A ClientCallDetails object describing the
outgoing RPC.</li>
<li><strong>request</strong> – The request value for the RPC.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and an iterator of
response values. Drawing response values from the returned
Call-iterator may raise RpcError indicating termination of
the RPC with non-OK status.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.StreamUnaryClientInterceptor">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">StreamUnaryClientInterceptor</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamUnaryClientInterceptor"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamUnaryClientInterceptor" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords intercepting stream-unary invocations.</p>
<p>This is an EXPERIMENTAL API.</p>
<dl class="method">
<dt id="grpc.StreamUnaryClientInterceptor.intercept_stream_unary">
<code class="descname">intercept_stream_unary</code><span class="sig-paren">(</span><em>continuation</em>, <em>client_call_details</em>, <em>request_iterator</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamUnaryClientInterceptor.intercept_stream_unary"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamUnaryClientInterceptor.intercept_stream_unary" title="Permalink to this definition">¶</a></dt>
<dd><p>Intercepts a stream-unary invocation asynchronously.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>continuation</strong> – A function that proceeds with the invocation by
executing the next interceptor in chain or invoking the
actual RPC on the underlying Channel. It is the interceptor’s
responsibility to call it if it decides to move the RPC forward.
The interceptor can use
<cite>response_future = continuation(client_call_details, request_iterator)</cite>
to continue with the RPC. <cite>continuation</cite> returns an object that is
both a Call for the RPC and a Future. In the event of RPC completion,
the return Call-Future’s result value will be the response message
of the RPC. Should the event terminate with non-OK status, the
returned Call-Future’s exception value will be an RpcError.</li>
<li><strong>client_call_details</strong> – A ClientCallDetails object describing the
outgoing RPC.</li>
<li><strong>request_iterator</strong> – An iterator that yields request values for the RPC.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and a Future.
In the event of RPC completion, the return Call-Future’s
result value will be the response message of the RPC.
Should the event terminate with non-OK status, the returned
Call-Future’s exception value will be an RpcError.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.StreamStreamClientInterceptor">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">StreamStreamClientInterceptor</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamStreamClientInterceptor"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamStreamClientInterceptor" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords intercepting stream-stream invocations.</p>
<p>This is an EXPERIMENTAL API.</p>
<dl class="method">
<dt id="grpc.StreamStreamClientInterceptor.intercept_stream_stream">
<code class="descname">intercept_stream_stream</code><span class="sig-paren">(</span><em>continuation</em>, <em>client_call_details</em>, <em>request_iterator</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamStreamClientInterceptor.intercept_stream_stream"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamStreamClientInterceptor.intercept_stream_stream" title="Permalink to this definition">¶</a></dt>
<dd><p>Intercepts a stream-stream invocation.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>continuation</strong> – A function that proceeds with the invocation by
executing the next interceptor in chain or invoking the
actual RPC on the underlying Channel. It is the interceptor’s
responsibility to call it if it decides to move the RPC forward.
The interceptor can use
<cite>response_iterator = continuation(client_call_details, request_iterator)</cite>
to continue with the RPC. <cite>continuation</cite> returns an object that is
both a Call for the RPC and an iterator for response values.
Drawing response values from the returned Call-iterator may
raise RpcError indicating termination of the RPC with non-OK
status.</li>
<li><strong>client_call_details</strong> – A ClientCallDetails object describing the
outgoing RPC.</li>
<li><strong>request_iterator</strong> – An iterator that yields request values for the RPC.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and an iterator of
response values. Drawing response values from the returned
Call-iterator may raise RpcError indicating termination of
the RPC with non-OK status.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="service-side-context">
<h3>Service-Side Context<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#service-side-context" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.ServicerContext">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ServicerContext</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext" title="Permalink to this definition">¶</a></dt>
<dd><p>A context object passed to method implementations.</p>
<dl class="method">
<dt id="grpc.ServicerContext.abort">
<code class="descname">abort</code><span class="sig-paren">(</span><em>code</em>, <em>details</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.abort"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.abort" title="Permalink to this definition">¶</a></dt>
<dd><p>Raises an exception to terminate the RPC with a non-OK status.</p>
<p>The code and details passed as arguments will supercede any existing
ones.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>code</strong> – A StatusCode object to be sent to the client.
It must not be StatusCode.OK.</li>
<li><strong>details</strong> – A UTF-8-encodable string to be sent to the client upon
termination of the RPC.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Raises:</th><td class="field-body"><p class="first last"><code class="xref py py-exc docutils literal notranslate"><span class="pre">Exception</span></code> – An exception is always raised to signal the abortion the
RPC to the gRPC runtime.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.abort_with_status">
<code class="descname">abort_with_status</code><span class="sig-paren">(</span><em>status</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.abort_with_status"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.abort_with_status" title="Permalink to this definition">¶</a></dt>
<dd><p>Raises an exception to terminate the RPC with a non-OK status.</p>
<p>The status passed as argument will supercede any existing status code,
status message and trailing metadata.</p>
<p>This is an EXPERIMENTAL API.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>status</strong> – A grpc.Status object. The status code in it must not be
StatusCode.OK.</td>
</tr>
<tr class="field-even field"><th class="field-name">Raises:</th><td class="field-body"><code class="xref py py-exc docutils literal notranslate"><span class="pre">Exception</span></code> – An exception is always raised to signal the abortion the
RPC to the gRPC runtime.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.auth_context">
<code class="descname">auth_context</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.auth_context"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.auth_context" title="Permalink to this definition">¶</a></dt>
<dd><p>Gets the auth context for the call.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">A map of strings to an iterable of bytes for each auth property.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.disable_next_message_compression">
<code class="descname">disable_next_message_compression</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.disable_next_message_compression"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.disable_next_message_compression" title="Permalink to this definition">¶</a></dt>
<dd><p>Disables compression for the next response message.</p>
<p>This is an EXPERIMENTAL method.</p>
<p>This method will override any compression configuration set during
server creation or set on the call.</p>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.invocation_metadata">
<code class="descname">invocation_metadata</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.invocation_metadata"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.invocation_metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>Accesses the metadata from the sent by the client.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The invocation <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a>.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.peer">
<code class="descname">peer</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.peer"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.peer" title="Permalink to this definition">¶</a></dt>
<dd><p>Identifies the peer that invoked the RPC being serviced.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">A string identifying the peer that invoked the RPC being serviced.
The string format is determined by gRPC runtime.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.peer_identities">
<code class="descname">peer_identities</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.peer_identities"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.peer_identities" title="Permalink to this definition">¶</a></dt>
<dd><p>Gets one or more peer identity(s).</p>
<p>Equivalent to
servicer_context.auth_context().get(servicer_context.peer_identity_key())</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">An iterable of the identities, or None if the call is not
authenticated. Each identity is returned as a raw bytes type.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.peer_identity_key">
<code class="descname">peer_identity_key</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.peer_identity_key"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.peer_identity_key" title="Permalink to this definition">¶</a></dt>
<dd><p>The auth property used to identify the peer.</p>
<p>For example, “x509_common_name” or “x509_subject_alternative_name” are
used to identify an SSL peer.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The auth property (string) that indicates the
peer identity, or None if the call is not authenticated.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.send_initial_metadata">
<code class="descname">send_initial_metadata</code><span class="sig-paren">(</span><em>initial_metadata</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.send_initial_metadata"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.send_initial_metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>Sends the initial metadata value to the client.</p>
<p>This method need not be called by implementations if they have no
metadata to add to what the gRPC runtime will transmit.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>initial_metadata</strong> – The initial <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a>.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.set_code">
<code class="descname">set_code</code><span class="sig-paren">(</span><em>code</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.set_code"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.set_code" title="Permalink to this definition">¶</a></dt>
<dd><p>Sets the value to be used as status code upon RPC completion.</p>
<p>This method need not be called by method implementations if they wish
the gRPC runtime to determine the status code of the RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>code</strong> – A StatusCode object to be sent to the client.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.set_compression">
<code class="descname">set_compression</code><span class="sig-paren">(</span><em>compression</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.set_compression"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.set_compression" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the compression algorithm to be used for the entire call.</p>
<p>This is an EXPERIMENTAL method.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.set_details">
<code class="descname">set_details</code><span class="sig-paren">(</span><em>details</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.set_details"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.set_details" title="Permalink to this definition">¶</a></dt>
<dd><p>Sets the value to be used as detail string upon RPC completion.</p>
<p>This method need not be called by method implementations if they have
no details to transmit.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>details</strong> – A UTF-8-encodable string to be sent to the client upon
termination of the RPC.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.ServicerContext.set_trailing_metadata">
<code class="descname">set_trailing_metadata</code><span class="sig-paren">(</span><em>trailing_metadata</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServicerContext.set_trailing_metadata"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServicerContext.set_trailing_metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>Sends the trailing metadata for the RPC.</p>
<p>This method need not be called by implementations if they have no
metadata to add to what the gRPC runtime will transmit.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>trailing_metadata</strong> – The trailing <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a>.</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="service-side-handler">
<h3>Service-Side Handler<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#service-side-handler" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.RpcMethodHandler">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">RpcMethodHandler</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#RpcMethodHandler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler" title="Permalink to this definition">¶</a></dt>
<dd><p>An implementation of a single RPC method.</p>
<dl class="attribute">
<dt id="grpc.RpcMethodHandler.request_streaming">
<code class="descname">request_streaming</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.request_streaming" title="Permalink to this definition">¶</a></dt>
<dd><p>Whether the RPC supports exactly one request message
or any arbitrary number of request messages.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.response_streaming">
<code class="descname">response_streaming</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.response_streaming" title="Permalink to this definition">¶</a></dt>
<dd><p>Whether the RPC supports exactly one response message
or any arbitrary number of response messages.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.request_deserializer">
<code class="descname">request_deserializer</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.request_deserializer" title="Permalink to this definition">¶</a></dt>
<dd><p>A callable behavior that accepts a byte string and
returns an object suitable to be passed to this object’s business
logic, or None to indicate that this object’s business logic should be
passed the raw request bytes.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.response_serializer">
<code class="descname">response_serializer</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.response_serializer" title="Permalink to this definition">¶</a></dt>
<dd><p>A callable behavior that accepts an object produced
by this object’s business logic and returns a byte string, or None to
indicate that the byte strings produced by this object’s business logic
should be transmitted on the wire as they are.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.unary_unary">
<code class="descname">unary_unary</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.unary_unary" title="Permalink to this definition">¶</a></dt>
<dd><p>This object’s application-specific business logic as a
callable value that takes a request value and a ServicerContext object
and returns a response value. Only non-None if both request_streaming
and response_streaming are False.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.unary_stream">
<code class="descname">unary_stream</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.unary_stream" title="Permalink to this definition">¶</a></dt>
<dd><p>This object’s application-specific business logic as a
callable value that takes a request value and a ServicerContext object
and returns an iterator of response values. Only non-None if
request_streaming is False and response_streaming is True.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.stream_unary">
<code class="descname">stream_unary</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.stream_unary" title="Permalink to this definition">¶</a></dt>
<dd><p>This object’s application-specific business logic as a
callable value that takes an iterator of request values and a
ServicerContext object and returns a response value. Only non-None if
request_streaming is True and response_streaming is False.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.RpcMethodHandler.stream_stream">
<code class="descname">stream_stream</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcMethodHandler.stream_stream" title="Permalink to this definition">¶</a></dt>
<dd><p>This object’s application-specific business logic as a
callable value that takes an iterator of request values and a
ServicerContext object and returns an iterator of response values.
Only non-None if request_streaming and response_streaming are both
True.</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.HandlerCallDetails">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">HandlerCallDetails</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#HandlerCallDetails"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.HandlerCallDetails" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes an RPC that has just arrived for service.</p>
<dl class="attribute">
<dt id="grpc.HandlerCallDetails.method">
<code class="descname">method</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.HandlerCallDetails.method" title="Permalink to this definition">¶</a></dt>
<dd><p>The method name of the RPC.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.HandlerCallDetails.invocation_metadata">
<code class="descname">invocation_metadata</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.HandlerCallDetails.invocation_metadata" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> sent by the client.</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.GenericRpcHandler">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">GenericRpcHandler</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#GenericRpcHandler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.GenericRpcHandler" title="Permalink to this definition">¶</a></dt>
<dd><p>An implementation of arbitrarily many RPC methods.</p>
<dl class="method">
<dt id="grpc.GenericRpcHandler.service">
<code class="descname">service</code><span class="sig-paren">(</span><em>handler_call_details</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#GenericRpcHandler.service"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.GenericRpcHandler.service" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the handler for servicing the RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>handler_call_details</strong> – A HandlerCallDetails describing the RPC.</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body">An RpcMethodHandler with which the RPC may be serviced if the
implementation chooses to service this RPC, or None otherwise.</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.ServiceRpcHandler">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ServiceRpcHandler</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServiceRpcHandler"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServiceRpcHandler" title="Permalink to this definition">¶</a></dt>
<dd><p>An implementation of RPC methods belonging to a service.</p>
<p>A service handles RPC methods with structured names of the form
‘/Service.Name/Service.Method’, where ‘Service.Name’ is the value
returned by service_name(), and ‘Service.Method’ is the method
name.  A service can have multiple method names, but only a single
service name.</p>
<dl class="method">
<dt id="grpc.ServiceRpcHandler.service_name">
<code class="descname">service_name</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServiceRpcHandler.service_name"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServiceRpcHandler.service_name" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns this service’s name.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">The service name.</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="service-side-interceptor">
<h3>Service-Side Interceptor<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#service-side-interceptor" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.ServerInterceptor">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">ServerInterceptor</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServerInterceptor"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServerInterceptor" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords intercepting incoming RPCs on the service-side.</p>
<p>This is an EXPERIMENTAL API.</p>
<dl class="method">
<dt id="grpc.ServerInterceptor.intercept_service">
<code class="descname">intercept_service</code><span class="sig-paren">(</span><em>continuation</em>, <em>handler_call_details</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#ServerInterceptor.intercept_service"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.ServerInterceptor.intercept_service" title="Permalink to this definition">¶</a></dt>
<dd><p>Intercepts incoming RPCs before handing them over to a handler.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>continuation</strong> – A function that takes a HandlerCallDetails and
proceeds to invoke the next interceptor in the chain, if any,
or the RPC handler lookup logic, with the call details passed
as an argument, and returns an RpcMethodHandler instance if
the RPC is considered serviced, or None otherwise.</li>
<li><strong>handler_call_details</strong> – A HandlerCallDetails describing the RPC.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An RpcMethodHandler with which the RPC may be serviced if the
interceptor chooses to service this RPC, or None otherwise.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="multi-callable-interfaces">
<h3>Multi-Callable Interfaces<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#multi-callable-interfaces" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.UnaryUnaryMultiCallable">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">UnaryUnaryMultiCallable</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryUnaryMultiCallable"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryUnaryMultiCallable" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords invoking a unary-unary RPC from client-side.</p>
<dl class="method">
<dt id="grpc.UnaryUnaryMultiCallable.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><em>request</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryUnaryMultiCallable.__call__"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryUnaryMultiCallable.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>Synchronously invokes the underlying RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request</strong> – The request value for the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow
for the RPC.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The response value for the RPC.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><p class="first last"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcError" title="grpc.RpcError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">RpcError</span></code></a> – Indicating that the RPC terminated with non-OK status. The
raised RpcError will also be a Call for the RPC affording the RPC’s
metadata, status code, and details.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.UnaryUnaryMultiCallable.future">
<code class="descname">future</code><span class="sig-paren">(</span><em>request</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryUnaryMultiCallable.future"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryUnaryMultiCallable.future" title="Permalink to this definition">¶</a></dt>
<dd><p>Asynchronously invokes the underlying RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request</strong> – The request value for the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow for
the RPC.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and a Future.
In the event of RPC completion, the return Call-Future’s result
value will be the response message of the RPC.
Should the event terminate with non-OK status,
the returned Call-Future’s exception value will be an RpcError.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.UnaryUnaryMultiCallable.with_call">
<code class="descname">with_call</code><span class="sig-paren">(</span><em>request</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryUnaryMultiCallable.with_call"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryUnaryMultiCallable.with_call" title="Permalink to this definition">¶</a></dt>
<dd><p>Synchronously invokes the underlying RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request</strong> – The request value for the RPC.</li>
<li><strong>timeout</strong> – An optional durating of time in seconds to allow for
the RPC.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The response value for the RPC and a Call value for the RPC.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><p class="first last"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcError" title="grpc.RpcError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">RpcError</span></code></a> – Indicating that the RPC terminated with non-OK status. The
raised RpcError will also be a Call for the RPC affording the RPC’s
metadata, status code, and details.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.UnaryStreamMultiCallable">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">UnaryStreamMultiCallable</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryStreamMultiCallable"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryStreamMultiCallable" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords invoking a unary-stream RPC from client-side.</p>
<dl class="method">
<dt id="grpc.UnaryStreamMultiCallable.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><em>request</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#UnaryStreamMultiCallable.__call__"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.UnaryStreamMultiCallable.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>Invokes the underlying RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request</strong> – The request value for the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow for
the RPC. If None, the timeout is considered infinite.</li>
<li><strong>metadata</strong> – An optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and an iterator of
response values. Drawing response values from the returned
Call-iterator may raise RpcError indicating termination of the
RPC with non-OK status.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.StreamUnaryMultiCallable">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">StreamUnaryMultiCallable</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamUnaryMultiCallable"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamUnaryMultiCallable" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords invoking a stream-unary RPC from client-side.</p>
<dl class="method">
<dt id="grpc.StreamUnaryMultiCallable.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><em>request_iterator</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamUnaryMultiCallable.__call__"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamUnaryMultiCallable.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>Synchronously invokes the underlying RPC.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request_iterator</strong> – An iterator that yields request values for
the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow for
the RPC. If None, the timeout is considered infinite.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The response value for the RPC.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><p class="first last"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcError" title="grpc.RpcError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">RpcError</span></code></a> – Indicating that the RPC terminated with non-OK status. The
raised RpcError will also implement grpc.Call, affording methods
such as metadata, code, and details.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.StreamUnaryMultiCallable.future">
<code class="descname">future</code><span class="sig-paren">(</span><em>request_iterator</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamUnaryMultiCallable.future"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamUnaryMultiCallable.future" title="Permalink to this definition">¶</a></dt>
<dd><p>Asynchronously invokes the underlying RPC on the client.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request_iterator</strong> – An iterator that yields request values for the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow for
the RPC. If None, the timeout is considered infinite.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and a Future.
In the event of RPC completion, the return Call-Future’s result value
will be the response message of the RPC. Should the event terminate
with non-OK status, the returned Call-Future’s exception value will
be an RpcError.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.StreamUnaryMultiCallable.with_call">
<code class="descname">with_call</code><span class="sig-paren">(</span><em>request_iterator</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamUnaryMultiCallable.with_call"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamUnaryMultiCallable.with_call" title="Permalink to this definition">¶</a></dt>
<dd><p>Synchronously invokes the underlying RPC on the client.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request_iterator</strong> – An iterator that yields request values for
the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow for
the RPC. If None, the timeout is considered infinite.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The response value for the RPC and a Call object for the RPC.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><p class="first last"><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.RpcError" title="grpc.RpcError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">RpcError</span></code></a> – Indicating that the RPC terminated with non-OK status. The
raised RpcError will also be a Call for the RPC affording the RPC’s
metadata, status code, and details.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="grpc.StreamStreamMultiCallable">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">StreamStreamMultiCallable</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamStreamMultiCallable"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamStreamMultiCallable" title="Permalink to this definition">¶</a></dt>
<dd><p>Affords invoking a stream-stream RPC on client-side.</p>
<dl class="method">
<dt id="grpc.StreamStreamMultiCallable.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><em>request_iterator</em>, <em>timeout=None</em>, <em>metadata=None</em>, <em>credentials=None</em>, <em>wait_for_ready=None</em>, <em>compression=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#StreamStreamMultiCallable.__call__"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.StreamStreamMultiCallable.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>Invokes the underlying RPC on the client.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first simple">
<li><strong>request_iterator</strong> – An iterator that yields request values for the RPC.</li>
<li><strong>timeout</strong> – An optional duration of time in seconds to allow for
the RPC. If not specified, the timeout is considered infinite.</li>
<li><strong>metadata</strong> – Optional <a class="reference internal" href="https://grpc.github.io/grpc/python/glossary.html#term-metadata"><span class="xref std std-term">metadata</span></a> to be transmitted to the
service-side of the RPC.</li>
<li><strong>credentials</strong> – An optional CallCredentials for the RPC. Only valid for
secure Channel.</li>
<li><strong>wait_for_ready</strong> – This is an EXPERIMENTAL argument. An optional
flag to enable wait for ready mechanism</li>
<li><strong>compression</strong> – An element of grpc.compression, e.g.
grpc.compression.Gzip. This is an EXPERIMENTAL option.</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first last">An object that is both a Call for the RPC and an iterator of
response values. Drawing response values from the returned
Call-iterator may raise RpcError indicating termination of the
RPC with non-OK status.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="future-interfaces">
<h3>Future Interfaces<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#future-interfaces" title="Permalink to this headline">¶</a></h3>
<dl class="exception">
<dt id="grpc.FutureTimeoutError">
<em class="property">exception </em><code class="descclassname">grpc.</code><code class="descname">FutureTimeoutError</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#FutureTimeoutError"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureTimeoutError" title="Permalink to this definition">¶</a></dt>
<dd><p>Indicates that a method call on a Future timed out.</p>
</dd></dl>

<dl class="exception">
<dt id="grpc.FutureCancelledError">
<em class="property">exception </em><code class="descclassname">grpc.</code><code class="descname">FutureCancelledError</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#FutureCancelledError"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureCancelledError" title="Permalink to this definition">¶</a></dt>
<dd><p>Indicates that the computation underlying a Future was cancelled.</p>
</dd></dl>

<dl class="class">
<dt id="grpc.Future">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">Future</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future" title="Permalink to this definition">¶</a></dt>
<dd><p>A representation of a computation in another control flow.</p>
<p>Computations represented by a Future may be yet to be begun,
may be ongoing, or may have already completed.</p>
<dl class="method">
<dt id="grpc.Future.add_done_callback">
<code class="descname">add_done_callback</code><span class="sig-paren">(</span><em>fn</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.add_done_callback"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.add_done_callback" title="Permalink to this definition">¶</a></dt>
<dd><p>Adds a function to be called at completion of the computation.</p>
<p>The callback will be passed this Future object describing the outcome
of the computation.  Callbacks will be invoked after the future is
terimated, whether successfully or not.</p>
<p>If the computation has already completed, the callback will be called
immediately.</p>
<p>Exceptions raised in the callback will be logged at ERROR level, but
will not terminate any threads of execution.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><strong>fn</strong> – A callable taking this Future object as its single parameter.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.cancel">
<code class="descname">cancel</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.cancel"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.cancel" title="Permalink to this definition">¶</a></dt>
<dd><p>Attempts to cancel the computation.</p>
<p>This method does not block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Returns True if the computation was canceled.<p>Returns False under all other circumstances, for example:</p>
<ol class="arabic simple">
<li>computation has begun and could not be canceled.</li>
<li>computation has finished</li>
<li><dl class="first docutils">
<dt>computation is scheduled for execution and it is impossible</dt>
<dd>to determine its state without blocking.</dd>
</dl>
</li>
</ol>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.cancelled">
<code class="descname">cancelled</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.cancelled"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.cancelled" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes whether the computation was cancelled.</p>
<p>This method does not block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Returns True if the computation was cancelled before its result became
available.<p>Returns False under all other circumstances, for example:</p>
<ol class="arabic simple">
<li>computation was not cancelled.</li>
<li>computation’s result is available.</li>
</ol>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.done">
<code class="descname">done</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.done"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.done" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes whether the computation has taken place.</p>
<p>This method does not block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Returns True if the computation already executed or was cancelled.
Returns False if the computation is scheduled for execution or
currently executing.
This is exactly opposite of the running() method’s result.</td>
</tr>
<tr class="field-even field"><th class="field-name">Return type:</th><td class="field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.exception">
<code class="descname">exception</code><span class="sig-paren">(</span><em>timeout=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.exception"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.exception" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the exception raised by the computation.</p>
<p>This method may return immediately or may block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><p class="first"><strong>timeout</strong> – The length of time in seconds to wait for the computation to
terminate or be cancelled. If None, the call will block until the
computations’s termination.</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The exception raised by the computation, or None if the computation
did not raise an exception.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><ul class="first last simple">
<li><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureTimeoutError" title="grpc.FutureTimeoutError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FutureTimeoutError</span></code></a> – If a timeout value is passed and the computation
does not terminate within the allotted time.</li>
<li><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureCancelledError" title="grpc.FutureCancelledError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FutureCancelledError</span></code></a> – If the computation was cancelled.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.result">
<code class="descname">result</code><span class="sig-paren">(</span><em>timeout=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.result"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.result" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the result of the computation or raises its exception.</p>
<p>This method may return immediately or may block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><p class="first"><strong>timeout</strong> – The length of time in seconds to wait for the computation to
finish or be cancelled. If None, the call will block until the
computations’s termination.</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The return value of the computation.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><ul class="first last simple">
<li><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureTimeoutError" title="grpc.FutureTimeoutError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FutureTimeoutError</span></code></a> – If a timeout value is passed and the computation
does not terminate within the allotted time.</li>
<li><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureCancelledError" title="grpc.FutureCancelledError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FutureCancelledError</span></code></a> – If the computation was cancelled.</li>
<li><code class="xref py py-exc docutils literal notranslate"><span class="pre">Exception</span></code> – If the computation raised an exception, this call will
raise the same exception.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.running">
<code class="descname">running</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.running"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.running" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes whether the computation is taking place.</p>
<p>This method does not block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Returns:</th><td class="field-body">Returns True if the computation is scheduled for execution or
currently executing.<p>Returns False if the computation already executed or was cancelled.</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class="method">
<dt id="grpc.Future.traceback">
<code class="descname">traceback</code><span class="sig-paren">(</span><em>timeout=None</em><span class="sig-paren">)</span><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Future.traceback"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Future.traceback" title="Permalink to this definition">¶</a></dt>
<dd><p>Access the traceback of the exception raised by the computation.</p>
<p>This method may return immediately or may block.</p>
<table class="docutils field-list" frame="void" rules="none">
<colgroup><col class="field-name">
<col class="field-body">
</colgroup><tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><p class="first"><strong>timeout</strong> – The length of time in seconds to wait for the computation
to terminate or be cancelled. If None, the call will block until
the computation’s termination.</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Returns:</th><td class="field-body"><p class="first">The traceback of the exception raised by the computation, or None
if the computation did not raise an exception.</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">Raises:</th><td class="field-body"><ul class="first last simple">
<li><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureTimeoutError" title="grpc.FutureTimeoutError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FutureTimeoutError</span></code></a> – If a timeout value is passed and the computation
does not terminate within the allotted time.</li>
<li><a class="reference internal" href="https://grpc.github.io/grpc/python/grpc.html#grpc.FutureCancelledError" title="grpc.FutureCancelledError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">FutureCancelledError</span></code></a> – If the computation was cancelled.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="compression">
<h3>Compression<a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#compression" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="grpc.Compression">
<em class="property">class </em><code class="descclassname">grpc.</code><code class="descname">Compression</code><a class="reference internal" href="https://grpc.github.io/grpc/python/_modules/grpc.html#Compression"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Compression" title="Permalink to this definition">¶</a></dt>
<dd><p>Indicates the compression method to be used for an RPC.</p>
<p>This enumeration is part of an EXPERIMENTAL API.</p>
<dl class="attribute">
<dt id="grpc.Compression.NoCompression">
<code class="descname">NoCompression</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Compression.NoCompression" title="Permalink to this definition">¶</a></dt>
<dd><p>Do not use compression algorithm.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.Compression.Deflate">
<code class="descname">Deflate</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Compression.Deflate" title="Permalink to this definition">¶</a></dt>
<dd><p>Use “Deflate” compression algorithm.</p>
</dd></dl>

<dl class="attribute">
<dt id="grpc.Compression.Gzip">
<code class="descname">Gzip</code><a class="headerlink" href="https://grpc.github.io/grpc/python/grpc.html#grpc.Compression.Gzip" title="Permalink to this definition">¶</a></dt>
<dd><p>Use “Gzip” compression algorithm.</p>
</dd></dl>

</dd></dl>

</div>
</div>
</div>


          </div>
          
        </div>
      </div>
    <div class="clearer"></div>
  </div>
    <div class="footer">
      ©2018, The gRPC Authors.
      
      |
      <a href="https://grpc.github.io/grpc/python/_sources/grpc.rst.txt" rel="nofollow">Page source</a>
    </div>

    

    
    <script type="text/javascript">

      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-60127042-1']);
      _gaq.push(['_setDomainName', 'none']);
      _gaq.push(['_setAllowLinker', true]);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

    </script>
    
  
</body></html>",
	"transformations": {
         	"stripped": True,
        	"grams": [1,2,3],
			"Title": False
		}
}]